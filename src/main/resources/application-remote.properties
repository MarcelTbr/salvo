
# ==============================================
#      SPRING BOOT PROPERTIES
# ==============================================
spring.jpa.hibernate.ddl-auto=create-drop
#spring.datasource.url=jdbc:postgresql://gopvoefwfhejwq:1c41b79924ca4bb5dbc372ccf5e19afd333cf9a9c73273620c8fb27ca584c44f@ec2-46-137-174-67.eu-west-1.compute.amazonaws.com:5432/d7cp8qrrvsoq5t
#jdbc:postgresql://host/database?user=user&password=password&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.url=jdbc:postgresql://ec2-46-137-174-67.eu-west-1.compute.amazonaws.com/d7cp8qrrvsoq5t?user=gopvoefwfhejwq&password=1c41b79924ca4bb5dbc372ccf5e19afd333cf9a9c73273620c8fb27ca584c44f&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory


marceltbr.database.writerendpoint=ec2-46-137-174-67.eu-west-1.compute.amazonaws.com
marceltbr.database.port=5432
marceltbr.database.name=d7cp8qrrvsoq5t

spring.datasource.username=gopvoefwfhejwq
spring.datasource.password=1c41b79924ca4bb5dbc372ccf5e19afd333cf9a9c73273620c8fb27ca584c44f
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# --------------------------------
#spring.jpa.hibernate.show_sql=true
#spring.data.jpa.repositories.enabled=true
#spring.jpa.generate-ddl=true
    # initalize the schema on startup

# SPRING MVC (WebMvcProperties)
# --------------------------------
spring.mvc.async.request-timeout=2000
spring.mvc.favicon.enabled=false

# TRANSACTION (TransactionProperties)
# ---------------------------
spring.transaction.default-timeout= 150

# ENDPOINTS (AbstractEndpoint subclasses)
endpoints.enabled=true
  # Enable endpoints.

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
management.security.enabled=false
  # Enable security.

# ----------------------------------------
# INTEGRATION PROPERTIES
# ----------------------------------------

# ACTIVEMQ (ActiveMQProperties)
spring.activemq.pool.create-connection-on-startup=true
  # Create a connection on startup. Can be used to warm-up the pool on startup.
spring.activemq.pool.enabled=true
  # Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.
spring.activemq.pool.expiry-timeout=0
  # Connection expiration timeout in milliseconds.
spring.activemq.pool.idle-timeout=30000
  # Connection idle timeout in milliseconds.
spring.activemq.pool.max-connections=20
  # Maximum number of pooled connections.


# ----------------------------------------------
# REST Repository URLs
# ----------------------------------------------

spring.data.rest.base-path=/rest
spring.jackson.serialization.INDENT_OUTPUT=true


# ---------------------
#logging.level.org.hibernate.SQL=DEBUG
#?useSSL=false